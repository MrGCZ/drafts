package java_oo;
//面向对象4
//1.多态 ： 父类的引用指向子类的对象  
//1.1多态的使用:在编译期，只能调用父类声明的方法，在运行期，我们执行的是子类重写父类的方法。编译向走，运行向右。

public class OO_Test2 {
	public static void main(String[] args) {
		//多态性：子类对象的多态性，父类的引用指向子类的对象 
		Human p1 = new Man();
		//多态的使用：当调用子父类同名同参数的方法时，实际执行的是子类重写父类的方法--虚拟方法调用
		p1.eat();
		//p1.earnMoney(); //不可以调用
		Human p2 = new Woman();
		p1.eatWith(p2);
		
		
	}

}

class Human{
	String name;
	int age;
		
	public void eat() {
		System.out.println("eat");
	}
	
	public void walk() {
		System.out.println("walk");
	}
	
	public void eatWith(Human human) {
		human.eat();
		this.eat();
	}
}


class Man extends Human{
	
	public void eat() {
		System.out.println("man eat");
	}
	
	public void walk() {
		System.out.println("man walk");
	}
	
	public void earnMoney() {
		System.out.println("earn money");
	}
}


class Woman extends Human{
	boolean isBeauty;
	
	public void eat() {
		System.out.println("woman eat");
	}
	
	public void walk() {
		System.out.println("woman walk");
	}
	
	public void goShopping() {
		System.out.println("go shopping");
	}
}
